// Reglas de seguridad de Firestore para RetroRocket
// Copia estas reglas en la consola de Firebase > Firestore Database > Rules

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Permitir acceso solo a usuarios autenticados NO anónimos
    match /{document=**} {
      allow read, write: if request.auth != null && request.auth.token.firebase.sign_in_provider != 'anonymous';
    }
    
    // Reglas más específicas para las colecciones de RetroRocket
    match /retrospectives/{retrospectiveId} {
      allow read, write: if request.auth != null && request.auth.token.firebase.sign_in_provider != 'anonymous';
      
      match /cards/{cardId} {
        allow read, write: if request.auth != null && request.auth.token.firebase.sign_in_provider != 'anonymous';
      }
    }
    
    match /participants/{participantId} {
      allow read, write: if request.auth != null && request.auth.token.firebase.sign_in_provider != 'anonymous';
    }
    
    match /cards/{cardId} {
      allow read, write: if request.auth != null && request.auth.token.firebase.sign_in_provider != 'anonymous';
    }
    
    // Reglas para typing status (previsualización de escritura en tiempo real)
    match /typingStatus/{typingId} {
      allow read, write: if request.auth != null && request.auth.token.firebase.sign_in_provider != 'anonymous';
      allow delete: if request.auth != null && request.auth.token.firebase.sign_in_provider != 'anonymous';
    }
    
    // Reglas para countdown timers - solo el creador del retrospective puede escribir
    match /countdown_timers/{retrospectiveId} {
      // Todos pueden leer el estado del temporizador
      allow read: if request.auth != null && request.auth.token.firebase.sign_in_provider != 'anonymous';
      
      // Solo el creador del retrospective puede crear/modificar el temporizador
      allow create: if request.auth != null && 
                   request.auth.token.firebase.sign_in_provider != 'anonymous' &&
                   request.auth.uid == resource.data.createdBy;
                   
      allow update: if request.auth != null && 
                   request.auth.token.firebase.sign_in_provider != 'anonymous' &&
                   request.auth.uid == resource.data.createdBy;
                   
      allow delete: if request.auth != null && 
                   request.auth.token.firebase.sign_in_provider != 'anonymous' &&
                   request.auth.uid == resource.data.createdBy;
    }
    
    // Reglas para notas del facilitador - solo el facilitador puede ver y modificar sus notas
    match /facilitatorNotes/{noteId} {
      // Solo el facilitador que creó la nota puede leerla
      allow read: if request.auth != null && 
                 request.auth.token.firebase.sign_in_provider != 'anonymous' &&
                 request.auth.uid == resource.data.facilitatorId;
                 
      // Solo el facilitador puede crear notas
      allow create: if request.auth != null && 
                   request.auth.token.firebase.sign_in_provider != 'anonymous' &&
                   request.auth.uid == request.resource.data.facilitatorId;
                   
      // Solo el facilitador que creó la nota puede modificarla
      allow update: if request.auth != null && 
                   request.auth.token.firebase.sign_in_provider != 'anonymous' &&
                   request.auth.uid == resource.data.facilitatorId;
                   
      // Solo el facilitador que creó la nota puede eliminarla
      allow delete: if request.auth != null && 
                   request.auth.token.firebase.sign_in_provider != 'anonymous' &&
                   request.auth.uid == resource.data.facilitatorId;
    }
  }
}
